/* ddeac1e7b57afbbd3c3ee2f4eb20d2d3bdadc188
 * This file is automatically generated by graphql-let. */

import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type Mutation = {
  __typename?: 'Mutation';
  recording: RecordingMutation;
};

export type RecordingMutation = {
  __typename?: 'RecordingMutation';
  create: Recording;
};


export type RecordingMutationCreateArgs = {
  input: CreateRecordingInput;
};

export type CreateRecordingInput = {
  operationName: Scalars['String'];
  query: Scalars['String'];
  variables: Scalars['String'];
};

export type Query = {
  __typename?: 'Query';
  getRecordings: Array<Maybe<Test>>;
};

export type Test = {
  __typename?: 'Test';
  replaceThisBullshxt: Scalars['String'];
};

export type Recording = {
  __typename?: 'Recording';
  operationName: Scalars['String'];
  query: Scalars['String'];
  variables: Scalars['String'];
};

export type CreateRecordingMutationVariables = Exact<{
  input: CreateRecordingInput;
}>;


export type CreateRecordingMutation = (
  { __typename?: 'Mutation' }
  & { recording: (
    { __typename?: 'RecordingMutation' }
    & { create: (
      { __typename?: 'Recording' }
      & Pick<Recording, 'operationName' | 'query' | 'variables'>
    ) }
  ) }
);


export const CreateRecordingDocument: DocumentNode<CreateRecordingMutation, CreateRecordingMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateRecording"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateRecordingInput"}}},"directives":[]}],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"recording"},"arguments":[],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"create"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"directives":[],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"operationName"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"query"},"arguments":[],"directives":[]},{"kind":"Field","name":{"kind":"Name","value":"variables"},"arguments":[],"directives":[]}]}}]}}]}}]};