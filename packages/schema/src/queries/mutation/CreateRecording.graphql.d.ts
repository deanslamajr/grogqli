/* ddeac1e7b57afbbd3c3ee2f4eb20d2d3bdadc188
 * This file is automatically generated by graphql-let. */

import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type Maybe<T> = T | null;
export declare type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
/** All built-in and custom scalars, mapped to their actual values */
export declare type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
};
export declare type Mutation = {
    __typename?: 'Mutation';
    recording: RecordingMutation;
};
export declare type RecordingMutation = {
    __typename?: 'RecordingMutation';
    create: Recording;
};
export declare type RecordingMutationCreateArgs = {
    input: CreateRecordingInput;
};
export declare type CreateRecordingInput = {
    operationName: Scalars['String'];
    query: Scalars['String'];
    variables: Scalars['String'];
};
export declare type Query = {
    __typename?: 'Query';
    getRecordings: Array<Maybe<Test>>;
};
export declare type Test = {
    __typename?: 'Test';
    replaceThisBullshxt: Scalars['String'];
};
export declare type Recording = {
    __typename?: 'Recording';
    operationName: Scalars['String'];
    query: Scalars['String'];
    variables: Scalars['String'];
};
export declare type CreateRecordingMutationVariables = Exact<{
    input: CreateRecordingInput;
}>;
export declare type CreateRecordingMutation = ({
    __typename?: 'Mutation';
} & {
    recording: ({
        __typename?: 'RecordingMutation';
    } & {
        create: ({
            __typename?: 'Recording';
        } & Pick<Recording, 'operationName' | 'query' | 'variables'>);
    });
});
export declare const CreateRecordingDocument: DocumentNode<CreateRecordingMutation, CreateRecordingMutationVariables>;
